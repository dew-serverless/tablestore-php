<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: filter.proto

namespace Protos;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>acs.tablestore.filter.SingleColumnValueFilter</code>
 */
class SingleColumnValueFilter extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>required .acs.tablestore.filter.ComparatorType comparator = 1;</code>
     */
    protected $comparator = null;
    /**
     * Generated from protobuf field <code>required string column_name = 2;</code>
     */
    protected $column_name = null;
    /**
     * Generated from protobuf field <code>required bytes column_value = 3;</code>
     */
    protected $column_value = null;
    /**
     * Generated from protobuf field <code>required bool filter_if_missing = 4;</code>
     */
    protected $filter_if_missing = null;
    /**
     * Generated from protobuf field <code>required bool latest_version_only = 5;</code>
     */
    protected $latest_version_only = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $comparator
     *     @type string $column_name
     *     @type string $column_value
     *     @type bool $filter_if_missing
     *     @type bool $latest_version_only
     * }
     */
    public function __construct($data = NULL) {
        \Protos\Metadata\Filter::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>required .acs.tablestore.filter.ComparatorType comparator = 1;</code>
     * @return int
     */
    public function getComparator()
    {
        return isset($this->comparator) ? $this->comparator : 0;
    }

    public function hasComparator()
    {
        return isset($this->comparator);
    }

    public function clearComparator()
    {
        unset($this->comparator);
    }

    /**
     * Generated from protobuf field <code>required .acs.tablestore.filter.ComparatorType comparator = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setComparator($var)
    {
        GPBUtil::checkEnum($var, \Protos\ComparatorType::class);
        $this->comparator = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>required string column_name = 2;</code>
     * @return string
     */
    public function getColumnName()
    {
        return isset($this->column_name) ? $this->column_name : '';
    }

    public function hasColumnName()
    {
        return isset($this->column_name);
    }

    public function clearColumnName()
    {
        unset($this->column_name);
    }

    /**
     * Generated from protobuf field <code>required string column_name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setColumnName($var)
    {
        GPBUtil::checkString($var, True);
        $this->column_name = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>required bytes column_value = 3;</code>
     * @return string
     */
    public function getColumnValue()
    {
        return isset($this->column_value) ? $this->column_value : '';
    }

    public function hasColumnValue()
    {
        return isset($this->column_value);
    }

    public function clearColumnValue()
    {
        unset($this->column_value);
    }

    /**
     * Generated from protobuf field <code>required bytes column_value = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setColumnValue($var)
    {
        GPBUtil::checkString($var, False);
        $this->column_value = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>required bool filter_if_missing = 4;</code>
     * @return bool
     */
    public function getFilterIfMissing()
    {
        return isset($this->filter_if_missing) ? $this->filter_if_missing : false;
    }

    public function hasFilterIfMissing()
    {
        return isset($this->filter_if_missing);
    }

    public function clearFilterIfMissing()
    {
        unset($this->filter_if_missing);
    }

    /**
     * Generated from protobuf field <code>required bool filter_if_missing = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setFilterIfMissing($var)
    {
        GPBUtil::checkBool($var);
        $this->filter_if_missing = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>required bool latest_version_only = 5;</code>
     * @return bool
     */
    public function getLatestVersionOnly()
    {
        return isset($this->latest_version_only) ? $this->latest_version_only : false;
    }

    public function hasLatestVersionOnly()
    {
        return isset($this->latest_version_only);
    }

    public function clearLatestVersionOnly()
    {
        unset($this->latest_version_only);
    }

    /**
     * Generated from protobuf field <code>required bool latest_version_only = 5;</code>
     * @param bool $var
     * @return $this
     */
    public function setLatestVersionOnly($var)
    {
        GPBUtil::checkBool($var);
        $this->latest_version_only = $var;

        return $this;
    }

}

