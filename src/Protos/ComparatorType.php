<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: filter.proto

namespace Protos;

use UnexpectedValueException;

/**
 * Protobuf type <code>acs.tablestore.filter.ComparatorType</code>
 */
class ComparatorType
{
    /**
     * Generated from protobuf enum <code>CT_EQUAL = 1;</code>
     */
    const CT_EQUAL = 1;
    /**
     * Generated from protobuf enum <code>CT_NOT_EQUAL = 2;</code>
     */
    const CT_NOT_EQUAL = 2;
    /**
     * Generated from protobuf enum <code>CT_GREATER_THAN = 3;</code>
     */
    const CT_GREATER_THAN = 3;
    /**
     * Generated from protobuf enum <code>CT_GREATER_EQUAL = 4;</code>
     */
    const CT_GREATER_EQUAL = 4;
    /**
     * Generated from protobuf enum <code>CT_LESS_THAN = 5;</code>
     */
    const CT_LESS_THAN = 5;
    /**
     * Generated from protobuf enum <code>CT_LESS_EQUAL = 6;</code>
     */
    const CT_LESS_EQUAL = 6;

    private static $valueToName = [
        self::CT_EQUAL => 'CT_EQUAL',
        self::CT_NOT_EQUAL => 'CT_NOT_EQUAL',
        self::CT_GREATER_THAN => 'CT_GREATER_THAN',
        self::CT_GREATER_EQUAL => 'CT_GREATER_EQUAL',
        self::CT_LESS_THAN => 'CT_LESS_THAN',
        self::CT_LESS_EQUAL => 'CT_LESS_EQUAL',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

