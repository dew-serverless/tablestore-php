<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: table.proto

namespace Protos;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>acs.tablestore.table.SSEDetails</code>
 */
class SSEDetails extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>required bool enable = 1;</code>
     */
    protected $enable = null;
    /**
     * Generated from protobuf field <code>optional .acs.tablestore.table.SSEKeyType key_type = 2;</code>
     */
    protected $key_type = null;
    /**
     * use when key_type is SSE_BYOK
     *
     * Generated from protobuf field <code>optional bytes key_id = 3;</code>
     */
    protected $key_id = null;
    /**
     * use when key_type is SSE_BYOK
     *
     * Generated from protobuf field <code>optional bytes role_arn = 4;</code>
     */
    protected $role_arn = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $enable
     *     @type int $key_type
     *     @type string $key_id
     *           use when key_type is SSE_BYOK
     *     @type string $role_arn
     *           use when key_type is SSE_BYOK
     * }
     */
    public function __construct($data = NULL) {
        \Protos\Metadata\Table::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>required bool enable = 1;</code>
     * @return bool
     */
    public function getEnable()
    {
        return isset($this->enable) ? $this->enable : false;
    }

    public function hasEnable()
    {
        return isset($this->enable);
    }

    public function clearEnable()
    {
        unset($this->enable);
    }

    /**
     * Generated from protobuf field <code>required bool enable = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setEnable($var)
    {
        GPBUtil::checkBool($var);
        $this->enable = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .acs.tablestore.table.SSEKeyType key_type = 2;</code>
     * @return int
     */
    public function getKeyType()
    {
        return isset($this->key_type) ? $this->key_type : 0;
    }

    public function hasKeyType()
    {
        return isset($this->key_type);
    }

    public function clearKeyType()
    {
        unset($this->key_type);
    }

    /**
     * Generated from protobuf field <code>optional .acs.tablestore.table.SSEKeyType key_type = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setKeyType($var)
    {
        GPBUtil::checkEnum($var, \Protos\SSEKeyType::class);
        $this->key_type = $var;

        return $this;
    }

    /**
     * use when key_type is SSE_BYOK
     *
     * Generated from protobuf field <code>optional bytes key_id = 3;</code>
     * @return string
     */
    public function getKeyId()
    {
        return isset($this->key_id) ? $this->key_id : '';
    }

    public function hasKeyId()
    {
        return isset($this->key_id);
    }

    public function clearKeyId()
    {
        unset($this->key_id);
    }

    /**
     * use when key_type is SSE_BYOK
     *
     * Generated from protobuf field <code>optional bytes key_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setKeyId($var)
    {
        GPBUtil::checkString($var, False);
        $this->key_id = $var;

        return $this;
    }

    /**
     * use when key_type is SSE_BYOK
     *
     * Generated from protobuf field <code>optional bytes role_arn = 4;</code>
     * @return string
     */
    public function getRoleArn()
    {
        return isset($this->role_arn) ? $this->role_arn : '';
    }

    public function hasRoleArn()
    {
        return isset($this->role_arn);
    }

    public function clearRoleArn()
    {
        unset($this->role_arn);
    }

    /**
     * use when key_type is SSE_BYOK
     *
     * Generated from protobuf field <code>optional bytes role_arn = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setRoleArn($var)
    {
        GPBUtil::checkString($var, False);
        $this->role_arn = $var;

        return $this;
    }

}

