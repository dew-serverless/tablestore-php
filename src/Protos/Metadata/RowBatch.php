<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: row_batch.proto

namespace Protos\Metadata;

class RowBatch
{
    public static $is_initialized = false;

    public static function initOnce() {
        $pool = \Google\Protobuf\Internal\DescriptorPool::getGeneratedPool();

        if (static::$is_initialized == true) {
          return;
        }
        \Protos\Metadata\Tablestore::initOnce();
        \Protos\Metadata\Row::initOnce();
        $pool->internalAddGeneratedFile(
            '
ß
row_batch.protoacs.tablestore.row.batch	row.proto"Y
BatchGetRowRequestC
tables (23.acs.tablestore.row.batch.TableInBatchGetRowRequest"[
BatchGetRowResponseD
tables (24.acs.tablestore.row.batch.TableInBatchGetRowResponse"ä
TableInBatchGetRowRequest

table_name (	
primary_key (
token (
columns_to_get (	1

time_range (2.acs.tablestore.row.TimeRange
max_versions (
cache_blocks (:true
filter (
start_column	 (	

end_column
 (	"r
TableInBatchGetRowResponse

table_name (	@
rows (22.acs.tablestore.row.batch.RowInBatchGetRowResponse"Æ
RowInBatchGetRowResponse
is_ok (:true$
error (2.acs.tablestore.Error6
consumed (2$.acs.tablestore.row.ConsumedCapacity
row (

next_token ("]
BatchWriteRowRequestE
tables (25.acs.tablestore.row.batch.TableInBatchWriteRowRequest"_
BatchWriteRowResponseF
tables (26.acs.tablestore.row.batch.TableInBatchWriteRowResponse"t
TableInBatchWriteRowRequest

table_name (	A
rows (23.acs.tablestore.row.batch.RowInBatchWriteRowRequest"Õ
RowInBatchWriteRowRequest5
type (2\'.acs.tablestore.row.batch.OperationType

row_change (0
	condition (2.acs.tablestore.row.Condition3
return_type (2.acs.tablestore.row.ReturnType"ê
TableInBatchWriteRowResponse

table_name (	F
put_rows (24.acs.tablestore.row.batch.RowInBatchWriteRowResponseI
update_rows (24.acs.tablestore.row.batch.RowInBatchWriteRowResponseI
delete_rows (24.acs.tablestore.row.batch.RowInBatchWriteRowResponse"ú
RowInBatchWriteRowResponse
is_ok (:true$
error (2.acs.tablestore.Error6
consumed (2$.acs.tablestore.row.ConsumedCapacity
row (*0
OperationType
PUT

UPDATE

DELETEB Protos‚Protos\\Metadata'
        , true);

        static::$is_initialized = true;
    }
}

